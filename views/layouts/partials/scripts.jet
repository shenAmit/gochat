<script async defer src="https://buttons.github.io/buttons.js"></script>
<script src="/app.bundle.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/flowbite/1.6.2/datepicker.min.js"></script>
<script
  src="https://code.jquery.com/jquery-3.7.1.min.js"
  integrity="sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo="
  crossorigin="anonymous"
></script>
<% if (typeof customScript !== 'undefined') { %>
<script src="<%= customScript %>"></script>
<% } %>
<!-- Include Quill (CDN) -->
<script src="https://cdn.quilljs.com/1.3.6/quill.js"></script>
<script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>

<!-- Initialize Quill -->
<script>
  const quill = new Quill("#editor", {
    theme: "snow",
    modules: {
      toolbar: [
        [{ header: [1, 2, 3, false] }],
        ["bold", "italic", "underline"],
        ["blockquote", "code-block"],
        [{ list: "ordered" }, { list: "bullet" }],
        ["link", "image"],
        ["clean"],
      ],
    },
    placeholder: "Type here...",
  });

  // Set initial content if present
  const initialAnswer = "thi";

  // Before form submit, set value
  $("form").on("submit", function () {
    $("#editor_content").val(quill.root.innerHTML); // Set hidden input with Quill content
  });

  // common delete function
  let deleteUrl = null;

  // Step 1: Set URL when delete button is clicked
  $(".delete-btn").on("click", function () {
    deleteUrl = $(this).data("url");
  });

  // Step 2: Handle confirmation click
  $("#confirm-delete-user").on("click", function () {
    if (!deleteUrl) return;

    $.ajax({
      url: deleteUrl,
      type: "DELETE",
      success: function () {
        // Optional: Show success message or toast
        location.reload();
      },
      error: function (xhr, status, error) {
        console.error("Delete error:", error);
        alert("Something went wrong.");
      },
    });
  });

  // slug genrator
  $(document).ready(function () {
    function slugify(text) {
      return text
        .toString()
        .toLowerCase()
        .trim()
        .replace(/[\s\W-]+/g, "-") // Replace spaces and non-word chars with dashes
        .replace(/^-+|-+$/g, ""); // Remove starting/ending dashes
    }

    $("#title").on("input", function () {
      const slug = slugify($(this).val());
      $("#slug").val(slug);
    });
  });

  // Image Preview
  $("#image").on("change", function () {
    const file = this.files[0];
    const allowedTypes = ["image/jpeg", "image/png", "image/jpg"];

    if (file) {
      if (!allowedTypes.includes(file.type)) {
        $("#image-error")
          .text("Only JPG, JPEG, and PNG files are allowed.")
          .removeClass("hidden");

        $("#preview-img").attr("src", "").addClass("hidden");

        this.value = ""; // Reset file input
        return;
      }

      // Clear any previous error
      $("#image-error").text("").addClass("hidden");

      const reader = new FileReader();
      reader.onload = function (e) {
        $("#preview-img").attr("src", e.target.result).removeClass("hidden");
      };

      reader.readAsDataURL(file);
    } else {
      $("#preview-img").attr("src", "").addClass("hidden");
      $("#image-error").text("").addClass("hidden");
    }
  });

  // Multiple select 2
  $(".select2").select2({
    placeholder: "Select a option",
    maximumSelectionLength: 100,
  });

  $(document).ready(function () {
    $("#role").on("change", function () {
      const selectedOption = $(this).find("option:selected");
      const roleName = selectedOption.attr("role-name");
      if (roleName == "User" || roleName == undefined) {
        $("#password_section").hide();
      } else {
        $("#password_section").show();
      }
    });
  });

  $(document).ready(function () {
    function toggleVideoInputs() {
      const selectedOption = $("#video_type").find("option:selected");
      const video_type = selectedOption.val();

      if (video_type == "upload") {
        $("#upload-video").show();
        $("#youtube-url").hide();
      } else if (video_type == "youtube_url") {
        $("#youtube-url").show();
        $("#upload-video").hide();
      } else {
        $("#upload-video").hide();
        $("#youtube-url").hide();
      }
    }
    toggleVideoInputs();

    $("#video_type").on("change", function () {
      const selectedOption = $(this).find("option:selected");
      const video_type = selectedOption.val();
      if (video_type == "upload") {
        $("#upload-video").show();
        $("#youtube-url").hide();
      }
      if (video_type == "youtube_url") {
        $("#youtube-url").show();
        $("#upload-video").hide();
      }
      if (video_type == "") {
        $("#upload-video").hide();
        $("#youtube-url").hide();
      }
    });
  });

  $("#gallery_image").on("change", function () {
    const files = this.files;
    const allowedTypes = ["image/jpeg", "image/png", "image/jpg"];
    const previewContainer = $("#preview-gallery-images");
    const errorContainer = $("#galley-image-error");

    previewContainer.empty(); // Clear previous previews
    errorContainer.text("").addClass("hidden");

    for (let i = 0; i < files.length; i++) {
      const file = files[i];

      if (!allowedTypes.includes(file.type)) {
        errorContainer
          .text("Only JPG, JPEG, and PNG files are allowed.")
          .removeClass("hidden");
        this.value = ""; // Reset file input
        previewContainer.empty();
        return;
      }

      const reader = new FileReader();
      reader.onload = function (e) {
        const imageWrapper = $("<div>").addClass(
          "relative inline-block mr-2 mb-2"
        );

        const closeBtn = $("<span>")
          .html("&times;")
          .addClass("absolute cursor-pointer z-10")
          .css({
            top: "0",
            right: "0",
            background: "red",
            color: "white",
            "font-size": "14px",
            width: "20px",
            height: "20px",
            "line-height": "20px",
            "text-align": "center",
            "border-radius": "50%",
            transform: "translate(50%, -50%)",
          })
          .on("click", function () {
            imageWrapper.remove();
          });

        const img = $("<img>")
          .attr("src", e.target.result)
          .addClass("w-16 h-16 object-cover rounded-md border");

        imageWrapper.append(img).append(closeBtn);
        previewContainer.append(imageWrapper);
      };

      reader.readAsDataURL(file);
    }
  });

  // append input box
  $("#addInput").click(function (event) {
    event.preventDefault(); // Prevent default form submission
    const lastInput = $('#youtube-url input[name="youtube_url"]').last();

    if (lastInput.length === 0 || lastInput.val().trim() !== "") {
      $("#youtube-url").append(`
      <div class="input-group mb-2">
        <label for="youtube_url" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Youtube url</label>
        <input type="url" name="youtube_url" class="shadow-sm bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-primary-500 focus:border-primary-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500">
       <button type="button" class="removeInput w-6 h-6 flex items-center justify-center bg-red-600 hover:bg-red-700 text-white rounded-full">
  <svg xmlns="http://www.w3.org/2000/svg" class="w-4 h-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 12H4" />
  </svg>
</button>


      </div>
    `);
    } else {
      // alert('Please fill in the last URL field before adding a new one.');
    }
  });
  // Remove input field
  $(document).on("click", ".removeInput", function () {
    $(this).closest(".input-group").remove();
  });

  $(document).ready(function () {
    // GST Certificate preview
    $("#gst_certificate").on("change", function () {
      showPreview(this, "#gst-preview");
    });

    // PAN Card preview
    $("#pan_card").on("change", function () {
      showPreview(this, "#pan-preview");
    });

    $("#cancel_cheque").on("change", function () {
      showPreview(this, "#cheque-previeww");
    });

    $("#profileImage").on("change", function () {
      showPreview(this, "#profile-preview");
    });

    function showPreview(input, previewSelector) {
      const file = input.files[0];
      if (file) {
        const reader = new FileReader();
        reader.onload = function (e) {
          $(previewSelector).attr("src", e.target.result).removeClass("hidden");
        };
        reader.readAsDataURL(file);
      } else {
        $(previewSelector).attr("src", "").addClass("hidden");
      }
    }
  });

  // append input box
  $(document).ready(function () {
    $("#ticket-container").on("click", ".add-row", function () {
      const $container = $("#ticket-container");
      let isValid = true;
      $container.find("input").each(function () {
        if ($(this).val().trim() === "") {
          isValid = false;
          $(this).addClass("border-red-500"); // Highlight empty field
        } else {
          $(this).removeClass("border-red-500"); // Remove highlight if filled
        }
      });
      if (!isValid) {
        alert("Please fill all fields before adding another row.");
        return;
      }

      const $row = $(this).closest(".ticket-row");
      const $newRow = $row.clone();

      $newRow.find("input").val("");
      $newRow.find(".add-row").addClass("hidden");
      $newRow.find(".remove-row").removeClass("hidden");

      $container.append($newRow);
    });

    $("#ticket-container").on("click", ".remove-row", function () {
      $(this).closest(".ticket-row").remove();
    });
  });

  // Remove input field
  $(document).on("click", ".removeInput", function () {
    $(this).closest(".input-group").remove();
  });
</script>
<script>
  const input = document.getElementById("siteLogo");
  const preview = document.getElementById("siteLogoPreview");

  input.addEventListener("change", (e) => {
    const file = e.target.files[0];
    if (file) {
      preview.src = URL.createObjectURL(file);
    }
  });
</script>
